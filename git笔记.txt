常用命令：

初始化git管理库：
	git init：表示将当前文件夹初始化为git管理库
	git init filename：表示将制定的文件夹初始化为git管理库

配置签名：
	用户签名：当前的签名只对当前的管理库有效 
		git config user.name "你的用户名"
		git config user.email "你的邮箱账户"
	系统签名：对同一台机器上的所有管理库有效
		git config --global user.name "你的用户名"
		git config --golbal user.email "你的邮箱账户"
		
查看管理库的状态
	git status:查看当前管理库的版本控制情况
	
暂存区的操作：
	git add filename:表示将指定的文件提交到暂存区
	git add . ：表示将当前路径下的所有文件提交到暂存区中
	git rm --cached filename:表示将指定文件移除暂存区
	git commit filename：表示将指定的文件从暂存区提交到本地库中
	git commit:表示将暂存区所有的改变提交到本地库
		注意：上面两种提交方式会跳转到一个编辑页面，用来编辑版本信息
	git commit -m "编辑版本信息"：直接编辑版本信息进行提交
	
历史记录的操作
	git log：查看当前本地库的历史版本
	git log --oneline:按照行的方式查看当前本地库的历史版本(只会显示当前版本和之前版本的信息)
	git reflog：按照行的方式查看本地库的历史记录(会显示所有版本信息)

找回删除的文件或者回到之前的版本
	git reset --hard 版本索引号 ：使工作区回到某个历史版本
	
文件差异比较(查看当前文件与原来版本的文件有什么区别)
	git diff filename:表示当前工作区的文件与暂存区的区别
	git diff 版本索引 lifename:表示当前工作区的文件与本地库的某一个版本的区别
		注意：如果diff后面没有文件名，就表示将工作区的所有文件进行比较
	
分支的处理：
	分支就是从版本控制的主干（主分支）上在开一个支线出来。支线和
	主干当时是一模一样的，但是
	开出来之后，就互不影响。主干按照主干的方式前进，分支按照分支的版本前进。嗯啊后某一刻，分支可以合并到主干上
	注意：1、不是只有主分支才能开分支，分支也能开分支
			2、不一定是分支合并到主分支上，也可以让主干合并到分支上
			3、合并分支的时候注意代码冲突
	常用命令：
		git branch -v:查看当前本地库的所有分支
		git branch 分支名：在当前分支上创建一个分支
		git checkout 分支名：切换到指定分支
		 注意：在切换分支之前一定确保工作区的文件全部提交到本地库了，如果没有提交会随着分支的切换而带到另一个分支
		 
	
	分支的合并：
		合并分支的时候，必须先定位到要合并到的分支上
		git merge 被合并的分支名B：阿静指定分支合并到当前分支上
		
		
		删除分支：
			git branch -d 分支名：删除指定分支
			
			
远程库的操作：
	git remote -v:查看当前管理库中管理的所有的远程仓库的地址
	git remote add [别名] 仓库地址：添加远程仓库
	git push [别名] [分之名]：将指定的分之中的本地库的内容推送到别名所代表的远程库中
	git push [别名] --all：将本地库所有分之git 的内容推送到别名所代表的远程库中

	git clone [仓库地址]：将指定url对应的远程仓库上的内容克隆到本地，
		这个操作会自动的生成git管理库，并且自动的管理远程仓库地址
	
	








	
	
	
	
	
	
	

	
	
	
	
	
	
	
	
备注：
1、工作区，暂存区，本地仓库，远程仓库
	
